{"ast":null,"code":"var _jsxFileName = \"/Users/tapiosaarnio/Desktop/mooc_fullstack/osa2/maidentiedot/src/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\nimport Find from './components/Find';\nimport Countries from './components/Countries';\n\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [countriesToShow, setCountriesToShow] = useState([]);\n  const [find, setFind] = useState('');\n  const [weatherData, setWeatherData] = useState([]);\n  const api_key = process.env.weatherkey;\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      setCountries(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    setToCountriesToShow();\n\n    if (countriesToShow.length === 1) {\n      const url = 'http://api.weatherstack.com/current/' + api_key + countriesToShow[0].name;\n      console.log(url);\n      axios.get('http://api.weatherstack.com/current/' + api_key + countriesToShow[0].name).then(response => {\n        console.log(response.data);\n      });\n    }\n  }, [find]);\n\n  const setToCountriesToShow = () => {\n    const countriesFiltered = countries.filter(count => count.name.toString().toLowerCase().includes(find.toString().toLowerCase()));\n    setCountriesToShow(countriesFiltered);\n  };\n\n  const handleChangeFind = event => {\n    setFind(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Find, {\n    handleChangeFind: handleChangeFind,\n    find: find,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Countries, {\n    countriesToShow: countriesToShow,\n    weatherData: weatherData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/tapiosaarnio/Desktop/mooc_fullstack/osa2/maidentiedot/src/index.js"],"names":["React","useState","useEffect","ReactDOM","serviceWorker","axios","Find","Countries","App","countries","setCountries","countriesToShow","setCountriesToShow","find","setFind","weatherData","setWeatherData","api_key","process","env","weatherkey","get","then","response","data","setToCountriesToShow","length","url","name","console","log","countriesFiltered","filter","count","toString","toLowerCase","includes","handleChangeFind","event","target","value","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\nimport Find from './components/Find'\nimport Countries from './components/Countries'\n\nconst App = () => {\n  const [countries, setCountries] = useState([])\n  const [countriesToShow, setCountriesToShow] = useState([])\n  const [find, setFind] = useState('')\n  const [weatherData, setWeatherData] = useState([])\n  const api_key = process.env.weatherkey\n\n  useEffect(() => {\n    axios\n        .get('https://restcountries.eu/rest/v2/all')\n        .then(response => {\n          setCountries(response.data)\n        })\n  },[])\n\n  useEffect(() => {\n\n    setToCountriesToShow()\n    if(countriesToShow.length === 1){\n      const url = 'http://api.weatherstack.com/current/' + api_key + countriesToShow[0].name\n    console.log(url)\n                     axios\n                     .get('http://api.weatherstack.com/current/' + api_key + countriesToShow[0].name)\n                     .then(response => {\n                       console.log(response.data)\n                     })\n    }\n\n\n  }, [find])\n\n  const setToCountriesToShow = () => {\n\n    const countriesFiltered = countries.filter(count => count.name.toString().toLowerCase().includes(find.toString().toLowerCase()))\n    setCountriesToShow(countriesFiltered)\n  }\n\n  const handleChangeFind = (event) => {\n\n    setFind(event.target.value)\n\n  }\n\n  return (\n    <div>\n      <Find handleChangeFind={handleChangeFind} find={find} />\n      <Countries countriesToShow={countriesToShow} weatherData={weatherData}/>\n    </div>\n  )\n}\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}